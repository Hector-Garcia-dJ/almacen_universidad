CREATE DEFINER=`root`@`localhost` PROCEDURE `Solicitud`(
    -- variables de entrada
    IN p_id INT, 
    IN p_cantidad INT, 
    IN p_id_almacen INT, 
    IN p_id_persona INT, 
    IN p_id_producto INT
)
BEGIN
    -- declaración de variables locales 
    DECLARE id_solicitud INT;
    DECLARE persona_rol INT;
    DECLARE cantidad_disponible INT;
    DECLARE cantidad_solicitada_hoy INT;

    -- Obtener el ID del rol de la persona
    SELECT id_rol_id INTO persona_rol 
    FROM almacen_app_persona 
    WHERE id_persona = p_id_persona;

    -- Verificar si el usuario no es "Encargado" y está intentando hacer una solicitud al almacén Central
    -- las validacciones se están realizando por medio del identificador (id)
    
    IF persona_rol != 3 AND p_id_almacen = 1 THEN
        SIGNAL SQLSTATE '45000' 
        SET MESSAGE_TEXT = 'No tienes permiso para realizar solicitudes al almacén Central.';
    END IF;

    -- Si la solicitud es al almacén Cuautepec
    IF p_id_almacen = 2 THEN
        -- Verificar si la cantidad solicitada excede el límite permitido por día
        SELECT COALESCE(SUM(cantidad), 0) INTO cantidad_solicitada_hoy
        FROM almacen_app_solicitud
        WHERE id_persona_id = p_id_persona
        AND id_producto_id = p_id_producto
        AND id_almacen_id = p_id_almacen
        AND DATE(fecha_solicitud) = CURDATE(); -- solo se consideren las solicitudes hechas en la fecha actual 
-- si el id del personal = 4 (Personal de limpieza)
-- se permitirá realizar peticiones de maximo 10 unidades de algún producto por día
        IF persona_rol = 4 THEN
            IF (cantidad_solicitada_hoy + p_cantidad) > 10 THEN
                SIGNAL SQLSTATE '45000'
                SET MESSAGE_TEXT = 'No puedes solicitar más de 10 piezas por producto por día.';
            END IF;
		-- de otra forma solo se permitira que soliciten 2 unidades por día (si son profesores o ayudante gral)
        ELSE
            IF (cantidad_solicitada_hoy + p_cantidad) > 2 THEN
                SIGNAL SQLSTATE '45000'
                SET MESSAGE_TEXT = 'No puedes solicitar más de 2 piezas por producto por día.';
                END IF;
        END IF;
    END IF;

    -- Insertar una nueva solicitud en la base de datos y obtener su ID asignado
    INSERT INTO almacen_app_solicitud (
    -- datos que se recibirán
        tipo_almacen, 
        nombre_persona, 
        nombre_producto, 
        cantidad, 
        fecha_solicitud, 
        id_almacen_id, 
        id_persona_id, 
        id_producto_id
    )
    VALUES (
    -- valores que se tomarán 
        (SELECT tipo_almacen FROM almacen_app_almacen WHERE id_almacen = p_id_almacen),
        (SELECT CONCAT(nombre, ' ', apellido_paterno, ' ', apellido_materno) FROM almacen_app_persona WHERE id_persona = p_id_persona),
        (SELECT nombre_producto FROM almacen_app_producto WHERE id_producto = p_id_producto),
        p_cantidad,
        -- fecha y hora actulaes que se aingresarán en ls solicitud 
        NOW(),
        p_id_almacen,
        p_id_persona,
        p_id_producto
    );

    -- Obtener el ID de la solicitud recién insertada
    SET id_solicitud = LAST_INSERT_ID();

    -- Actualizar la cantidad disponible en "almacen_app_producto" si la solicitud es al almacén Cuautepec
    IF p_id_almacen = 2 THEN
        -- Obtener la cantidad disponible del producto en el almacén
        SELECT cantidad INTO cantidad_disponible 
        FROM almacen_app_producto 
        WHERE id_producto = p_id_producto;

        -- Verificar si la cantidad solicitada excede la cantidad disponible en el almacén
        IF p_cantidad > cantidad_disponible THEN
            SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'La cantidad solicitada excede la cantidad disponible en el almacén.';
		END IF;

        -- Actualizar la cantidad disponible del producto en la tabla "almacen_app_producto"
        UPDATE almacen_app_producto
        SET cantidad = cantidad - p_cantidad
        WHERE id_producto = p_id_producto;
    END IF;

    -- Devolver el ID de la solicitud asignada
    SELECT id_solicitud;
END